{"ast":null,"code":"export class AuthError extends Error {\n  constructor(message) {\n    super(message);\n    this.__isAuthError = true;\n    this.name = 'AuthError';\n  }\n}\nexport function isAuthError(error) {\n  return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n  constructor(message, status) {\n    super(message);\n    this.name = 'AuthApiError';\n    this.status = status;\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status\n    };\n  }\n}\nexport function isAuthApiError(error) {\n  return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n  constructor(message, originalError) {\n    super(message);\n    this.name = 'AuthUnknownError';\n    this.originalError = originalError;\n  }\n}\nexport class CustomAuthError extends AuthError {\n  constructor(message, name, status) {\n    super(message);\n    this.name = name;\n    this.status = status;\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status\n    };\n  }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n  constructor() {\n    super('Auth session missing!', 'AuthSessionMissingError', 400);\n  }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n  constructor(message) {\n    super(message, 'AuthInvalidCredentialsError', 400);\n  }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n  constructor(message) {\n    let details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(message, 'AuthImplicitGrantRedirectError', 500);\n    this.details = null;\n    this.details = details;\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details\n    };\n  }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n  constructor(message, status) {\n    super(message, 'AuthRetryableFetchError', status);\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAM,MAAOA,SAAU,SAAQC,KAAK;EAGlCC,YAAYC,OAAe;IACzB,KAAK,CAACA,OAAO,CAAC;IAHN,kBAAa,GAAG,IAAI;IAI5B,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;;AAGF,OAAM,SAAUC,WAAW,CAACC,KAAc;EACxC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAI,eAAe,IAAIA,KAAK;AAChF;AAEA,OAAM,MAAOC,YAAa,SAAQP,SAAS;EAGzCE,YAAYC,OAAe,EAAEK,MAAc;IACzC,KAAK,CAACL,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,cAAc;IAC1B,IAAI,CAACI,MAAM,GAAGA,MAAM;EACtB;EAEAC,MAAM;IACJ,OAAO;MACLL,IAAI,EAAE,IAAI,CAACA,IAAI;MACfD,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBK,MAAM,EAAE,IAAI,CAACA;KACd;EACH;;AAGF,OAAM,SAAUE,cAAc,CAACJ,KAAc;EAC3C,OAAOD,WAAW,CAACC,KAAK,CAAC,IAAIA,KAAK,CAACF,IAAI,KAAK,cAAc;AAC5D;AAEA,OAAM,MAAOO,gBAAiB,SAAQX,SAAS;EAG7CE,YAAYC,OAAe,EAAES,aAAsB;IACjD,KAAK,CAACT,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,kBAAkB;IAC9B,IAAI,CAACQ,aAAa,GAAGA,aAAa;EACpC;;AAGF,OAAM,MAAOC,eAAgB,SAAQb,SAAS;EAG5CE,YAAYC,OAAe,EAAEC,IAAY,EAAEI,MAAc;IACvD,KAAK,CAACL,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACI,MAAM,GAAGA,MAAM;EACtB;EAEAC,MAAM;IACJ,OAAO;MACLL,IAAI,EAAE,IAAI,CAACA,IAAI;MACfD,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBK,MAAM,EAAE,IAAI,CAACA;KACd;EACH;;AAGF,OAAM,MAAOM,uBAAwB,SAAQD,eAAe;EAC1DX;IACE,KAAK,CAAC,uBAAuB,EAAE,yBAAyB,EAAE,GAAG,CAAC;EAChE;;AAGF,OAAM,MAAOa,2BAA4B,SAAQF,eAAe;EAC9DX,YAAYC,OAAe;IACzB,KAAK,CAACA,OAAO,EAAE,6BAA6B,EAAE,GAAG,CAAC;EACpD;;AAGF,OAAM,MAAOa,8BAA+B,SAAQH,eAAe;EAEjEX,YAAYC,OAAe,EAAwD;IAAA,IAAtDc,8EAAkD,IAAI;IACjF,KAAK,CAACd,OAAO,EAAE,gCAAgC,EAAE,GAAG,CAAC;IAFvD,YAAO,GAA2C,IAAI;IAGpD,IAAI,CAACc,OAAO,GAAGA,OAAO;EACxB;EAEAR,MAAM;IACJ,OAAO;MACLL,IAAI,EAAE,IAAI,CAACA,IAAI;MACfD,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBK,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBS,OAAO,EAAE,IAAI,CAACA;KACf;EACH;;AAGF,OAAM,MAAOC,uBAAwB,SAAQL,eAAe;EAC1DX,YAAYC,OAAe,EAAEK,MAAc;IACzC,KAAK,CAACL,OAAO,EAAE,yBAAyB,EAAEK,MAAM,CAAC;EACnD","names":["AuthError","Error","constructor","message","name","isAuthError","error","AuthApiError","status","toJSON","isAuthApiError","AuthUnknownError","originalError","CustomAuthError","AuthSessionMissingError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","details","AuthRetryableFetchError"],"sources":["C:\\Users\\recar\\Documents\\GitHub\\TILProject\\node_modules\\@supabase\\gotrue-js\\src\\lib\\errors.ts"],"sourcesContent":["export class AuthError extends Error {\r\n  protected __isAuthError = true\r\n\r\n  constructor(message: string) {\r\n    super(message)\r\n    this.name = 'AuthError'\r\n  }\r\n}\r\n\r\nexport function isAuthError(error: unknown): error is AuthError {\r\n  return typeof error === 'object' && error !== null && '__isAuthError' in error\r\n}\r\n\r\nexport class AuthApiError extends AuthError {\r\n  status: number\r\n\r\n  constructor(message: string, status: number) {\r\n    super(message)\r\n    this.name = 'AuthApiError'\r\n    this.status = status\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      status: this.status,\r\n    }\r\n  }\r\n}\r\n\r\nexport function isAuthApiError(error: unknown): error is AuthApiError {\r\n  return isAuthError(error) && error.name === 'AuthApiError'\r\n}\r\n\r\nexport class AuthUnknownError extends AuthError {\r\n  originalError: unknown\r\n\r\n  constructor(message: string, originalError: unknown) {\r\n    super(message)\r\n    this.name = 'AuthUnknownError'\r\n    this.originalError = originalError\r\n  }\r\n}\r\n\r\nexport class CustomAuthError extends AuthError {\r\n  name: string\r\n  status: number\r\n  constructor(message: string, name: string, status: number) {\r\n    super(message)\r\n    this.name = name\r\n    this.status = status\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      status: this.status,\r\n    }\r\n  }\r\n}\r\n\r\nexport class AuthSessionMissingError extends CustomAuthError {\r\n  constructor() {\r\n    super('Auth session missing!', 'AuthSessionMissingError', 400)\r\n  }\r\n}\r\n\r\nexport class AuthInvalidCredentialsError extends CustomAuthError {\r\n  constructor(message: string) {\r\n    super(message, 'AuthInvalidCredentialsError', 400)\r\n  }\r\n}\r\n\r\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\r\n  details: { error: string; code: string } | null = null\r\n  constructor(message: string, details: { error: string; code: string } | null = null) {\r\n    super(message, 'AuthImplicitGrantRedirectError', 500)\r\n    this.details = details\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      status: this.status,\r\n      details: this.details,\r\n    }\r\n  }\r\n}\r\n\r\nexport class AuthRetryableFetchError extends CustomAuthError {\r\n  constructor(message: string, status: number) {\r\n    super(message, 'AuthRetryableFetchError', status)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}