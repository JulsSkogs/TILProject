{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { expiresAt, looksLikeFetchResponse } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors';\nconst _getErrorMessage = err => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n  const NETWORK_ERROR_CODES = [502, 503, 504];\n  if (!looksLikeFetchResponse(error)) {\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), 0));\n  } else if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status));\n  } else {\n    // got a response from server that is not in the 500...599 range - should not retry\n    error.json().then(err => {\n      reject(new AuthApiError(_getErrorMessage(err), error.status || 500));\n    }).catch(e => {\n      // not a valid json response\n      reject(new AuthUnknownError(_getErrorMessage(e), e));\n    });\n  }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n  const params = {\n    method,\n    headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n  };\n  if (method === 'GET') {\n    return params;\n  }\n  params.headers = Object.assign({\n    'Content-Type': 'application/json;charset=UTF-8'\n  }, options === null || options === void 0 ? void 0 : options.headers);\n  params.body = JSON.stringify(body);\n  return Object.assign(Object.assign({}, params), parameters);\n};\nexport function _request(fetcher, method, url, options) {\n  var _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n      headers['Authorization'] = `Bearer ${options.jwt}`;\n    }\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n      qs['redirect_to'] = options.redirectTo;\n    }\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n    const data = yield _handleRequest(fetcher, method, url + queryString, {\n      headers,\n      noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : {\n      data: Object.assign({}, data),\n      error: null\n    };\n  });\n}\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      fetcher(url, _getRequestParams(method, options, parameters, body)).then(result => {\n        if (!result.ok) throw result;\n        if (options === null || options === void 0 ? void 0 : options.noResolveJson) return result;\n        return result.json();\n      }).then(data => resolve(data)).catch(error => handleError(error, reject));\n    });\n  });\n}\nexport function _sessionResponse(data) {\n  var _a;\n  let session = null;\n  if (hasSession(data)) {\n    session = Object.assign({}, data);\n    session.expires_at = expiresAt(data.expires_in);\n  }\n  const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n  return {\n    data: {\n      session,\n      user\n    },\n    error: null\n  };\n}\nexport function _userResponse(data) {\n  var _a;\n  const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n  return {\n    data: {\n      user\n    },\n    error: null\n  };\n}\nexport function _ssoResponse(data) {\n  return {\n    data,\n    error: null\n  };\n}\nexport function _generateLinkResponse(data) {\n  const {\n      action_link,\n      email_otp,\n      hashed_token,\n      redirect_to,\n      verification_type\n    } = data,\n    rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n  const properties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type\n  };\n  const user = Object.assign({}, rest);\n  return {\n    data: {\n      properties,\n      user\n    },\n    error: null\n  };\n}\nexport function _noResolveJsonResponse(data) {\n  return data;\n}\n/**\r\n * hasSession checks if the response object contains a valid session\r\n * @param data A response object\r\n * @returns true if a session is in the response\r\n */\nfunction hasSession(data) {\n  return data.access_token && data.refresh_token && data.expires_in;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAS,EAAEC,sBAAsB,QAAQ,WAAW;AAS7D,SAASC,YAAY,EAAEC,uBAAuB,EAAEC,gBAAgB,QAAQ,UAAU;AAiBlF,MAAMC,gBAAgB,GAAIC,GAAQ,IAChCA,GAAG,CAACC,GAAG,IAAID,GAAG,CAACE,OAAO,IAAIF,GAAG,CAACG,iBAAiB,IAAIH,GAAG,CAACI,KAAK,IAAIC,IAAI,CAACC,SAAS,CAACN,GAAG,CAAC;AAErF,MAAMO,WAAW,GAAG,CAAOH,KAAc,EAAEI,MAA8B,KAAIC;EAC3E,MAAMC,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC3C,IAAI,CAACf,sBAAsB,CAACS,KAAK,CAAC,EAAE;IAClCI,MAAM,CAAC,IAAIX,uBAAuB,CAACE,gBAAgB,CAACK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;GAChE,MAAM,IAAIM,mBAAmB,CAACC,QAAQ,CAACP,KAAK,CAACQ,MAAM,CAAC,EAAE;IACrD;IACAJ,MAAM,CAAC,IAAIX,uBAAuB,CAACE,gBAAgB,CAACK,KAAK,CAAC,EAAEA,KAAK,CAACQ,MAAM,CAAC,CAAC;GAC3E,MAAM;IACL;IACAR,KAAK,CACFS,IAAI,EAAE,CACNC,IAAI,CAAEd,GAAG,IAAI;MACZQ,MAAM,CAAC,IAAIZ,YAAY,CAACG,gBAAgB,CAACC,GAAG,CAAC,EAAEI,KAAK,CAACQ,MAAM,IAAI,GAAG,CAAC,CAAC;IACtE,CAAC,CAAC,CACDG,KAAK,CAAEC,CAAC,IAAI;MACX;MACAR,MAAM,CAAC,IAAIV,gBAAgB,CAACC,gBAAgB,CAACiB,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC;;AAER,CAAC;AAED,MAAMC,iBAAiB,GAAG,CACxBC,MAAyB,EACzBC,OAAsB,EACtBC,UAA4B,EAC5BC,IAAa,KACX;EACF,MAAMC,MAAM,GAAyB;IAAEJ,MAAM;IAAEK,OAAO,EAAE,QAAO,aAAPJ,OAAO,uBAAPA,OAAO,CAAEI,OAAO,KAAI;EAAE,CAAE;EAEhF,IAAIL,MAAM,KAAK,KAAK,EAAE;IACpB,OAAOI,MAAM;;EAGfA,MAAM,CAACC,OAAO;IAAK,cAAc,EAAE;EAAgC,GAAKJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,OAAO,CAAE;EAC1FD,MAAM,CAACD,IAAI,GAAGhB,IAAI,CAACC,SAAS,CAACe,IAAI,CAAC;EAClC,uCAAYC,MAAM,GAAKF,UAAU;AACnC,CAAC;AAaD,OAAM,SAAgBI,QAAQ,CAC5BC,OAAc,EACdP,MAAyB,EACzBQ,GAAW,EACXP,OAA8B;;;IAE9B,MAAMI,OAAO,qBAAQJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,OAAO,CAAE;IACvC,IAAIJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,GAAG,EAAE;MAChBJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUJ,OAAO,CAACQ,GAAG,EAAE;;IAEpD,MAAMC,EAAE,GAAG,aAAO,aAAPT,OAAO,uBAAPA,OAAO,CAAEU,KAAK,mCAAI,EAAE;IAC/B,IAAIV,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,UAAU,EAAE;MACvBF,EAAE,CAAC,aAAa,CAAC,GAAGT,OAAO,CAACW,UAAU;;IAExC,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACL,EAAE,CAAC,CAACM,MAAM,GAAG,GAAG,GAAG,IAAIC,eAAe,CAACP,EAAE,CAAC,CAACQ,QAAQ,EAAE,GAAG,EAAE;IAC1F,MAAMC,IAAI,GAAG,MAAMC,cAAc,CAC/Bb,OAAO,EACPP,MAAM,EACNQ,GAAG,GAAGK,WAAW,EACjB;MAAER,OAAO;MAAEgB,aAAa,EAAEpB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEoB;IAAa,CAAE,EAClD,EAAE,EACFpB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,IAAI,CACd;IACD,OAAO,QAAO,aAAPF,OAAO,uBAAPA,OAAO,CAAEqB,KAAK,IAAGrB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEqB,KAAK,CAACH,IAAI,CAAC,GAAG;MAAEA,IAAI,oBAAOA,IAAI,CAAE;MAAEjC,KAAK,EAAE;IAAI,CAAE;;;AAGnF,SAAekC,cAAc,CAC3Bb,OAAc,EACdP,MAAyB,EACzBQ,GAAW,EACXP,OAAsB,EACtBC,UAA4B,EAC5BC,IAAa;;IAEb,OAAO,IAAIoB,OAAO,CAAC,CAACC,OAAO,EAAElC,MAAM,KAAI;MACrCiB,OAAO,CAACC,GAAG,EAAET,iBAAiB,CAACC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,IAAI,CAAC,CAAC,CAC/DP,IAAI,CAAE6B,MAAM,IAAI;QACf,IAAI,CAACA,MAAM,CAACC,EAAE,EAAE,MAAMD,MAAM;QAC5B,IAAIxB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEoB,aAAa,EAAE,OAAOI,MAAM;QACzC,OAAOA,MAAM,CAAC9B,IAAI,EAAE;MACtB,CAAC,CAAC,CACDC,IAAI,CAAEuB,IAAI,IAAKK,OAAO,CAACL,IAAI,CAAC,CAAC,CAC7BtB,KAAK,CAAEX,KAAK,IAAKG,WAAW,CAACH,KAAK,EAAEI,MAAM,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC;;AAED,OAAM,SAAUqC,gBAAgB,CAACR,IAAS;;EACxC,IAAIS,OAAO,GAAG,IAAI;EAClB,IAAIC,UAAU,CAACV,IAAI,CAAC,EAAE;IACpBS,OAAO,qBAAQT,IAAI,CAAE;IACrBS,OAAO,CAACE,UAAU,GAAGtD,SAAS,CAAC2C,IAAI,CAACY,UAAU,CAAC;;EAEjD,MAAMC,IAAI,GAAS,UAAI,CAACA,IAAI,mCAAKb,IAAa;EAC9C,OAAO;IAAEA,IAAI,EAAE;MAAES,OAAO;MAAEI;IAAI,CAAE;IAAE9C,KAAK,EAAE;EAAI,CAAE;AACjD;AAEA,OAAM,SAAU+C,aAAa,CAACd,IAAS;;EACrC,MAAMa,IAAI,GAAS,UAAI,CAACA,IAAI,mCAAKb,IAAa;EAC9C,OAAO;IAAEA,IAAI,EAAE;MAAEa;IAAI,CAAE;IAAE9C,KAAK,EAAE;EAAI,CAAE;AACxC;AAEA,OAAM,SAAUgD,YAAY,CAACf,IAAS;EACpC,OAAO;IAAEA,IAAI;IAAEjC,KAAK,EAAE;EAAI,CAAE;AAC9B;AAEA,OAAM,SAAUiD,qBAAqB,CAAChB,IAAS;EAC7C,MAAM;MAAEiB,WAAW;MAAEC,SAAS;MAAEC,YAAY;MAAEC,WAAW;MAAEC;IAAiB,IAAcrB,IAAI;IAAbsB,IAAI,UAAKtB,IAAI,EAAxF,gFAAiF,CAAO;EAE9F,MAAMuB,UAAU,GAA2B;IACzCN,WAAW;IACXC,SAAS;IACTC,YAAY;IACZC,WAAW;IACXC;GACD;EAED,MAAMR,IAAI,qBAAcS,IAAI,CAAE;EAC9B,OAAO;IACLtB,IAAI,EAAE;MACJuB,UAAU;MACVV;KACD;IACD9C,KAAK,EAAE;GACR;AACH;AAEA,OAAM,SAAUyD,sBAAsB,CAACxB,IAAS;EAC9C,OAAOA,IAAI;AACb;AAEA;;;;;AAKA,SAASU,UAAU,CAACV,IAAS;EAC3B,OAAOA,IAAI,CAACyB,YAAY,IAAIzB,IAAI,CAAC0B,aAAa,IAAI1B,IAAI,CAACY,UAAU;AACnE","names":["expiresAt","looksLikeFetchResponse","AuthApiError","AuthRetryableFetchError","AuthUnknownError","_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","handleError","reject","__awaiter","NETWORK_ERROR_CODES","includes","status","json","then","catch","e","_getRequestParams","method","options","parameters","body","params","headers","_request","fetcher","url","jwt","qs","query","redirectTo","queryString","Object","keys","length","URLSearchParams","toString","data","_handleRequest","noResolveJson","xform","Promise","resolve","result","ok","_sessionResponse","session","hasSession","expires_at","expires_in","user","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","properties","_noResolveJsonResponse","access_token","refresh_token"],"sources":["C:\\Users\\recar\\Documents\\GitHub\\TILProject\\node_modules\\@supabase\\gotrue-js\\src\\lib\\fetch.ts"],"sourcesContent":["import { expiresAt, looksLikeFetchResponse } from './helpers'\r\nimport {\r\n  AuthResponse,\r\n  SSOResponse,\r\n  GenerateLinkProperties,\r\n  GenerateLinkResponse,\r\n  User,\r\n  UserResponse,\r\n} from './types'\r\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors'\r\n\r\nexport type Fetch = typeof fetch\r\n\r\nexport interface FetchOptions {\r\n  headers?: {\r\n    [key: string]: string\r\n  }\r\n  noResolveJson?: boolean\r\n}\r\n\r\nexport interface FetchParameters {\r\n  signal?: AbortSignal\r\n}\r\n\r\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\r\n\r\nconst _getErrorMessage = (err: any): string =>\r\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\r\n\r\nconst handleError = async (error: unknown, reject: (reason?: any) => void) => {\r\n  const NETWORK_ERROR_CODES = [502, 503, 504]\r\n  if (!looksLikeFetchResponse(error)) {\r\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), 0))\r\n  } else if (NETWORK_ERROR_CODES.includes(error.status)) {\r\n    // status in 500...599 range - server had an error, request might be retryed.\r\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status))\r\n  } else {\r\n    // got a response from server that is not in the 500...599 range - should not retry\r\n    error\r\n      .json()\r\n      .then((err) => {\r\n        reject(new AuthApiError(_getErrorMessage(err), error.status || 500))\r\n      })\r\n      .catch((e) => {\r\n        // not a valid json response\r\n        reject(new AuthUnknownError(_getErrorMessage(e), e))\r\n      })\r\n  }\r\n}\r\n\r\nconst _getRequestParams = (\r\n  method: RequestMethodType,\r\n  options?: FetchOptions,\r\n  parameters?: FetchParameters,\r\n  body?: object\r\n) => {\r\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\r\n\r\n  if (method === 'GET') {\r\n    return params\r\n  }\r\n\r\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\r\n  params.body = JSON.stringify(body)\r\n  return { ...params, ...parameters }\r\n}\r\n\r\ninterface GotrueRequestOptions extends FetchOptions {\r\n  jwt?: string\r\n  redirectTo?: string\r\n  body?: object\r\n  query?: { [key: string]: string }\r\n  /**\r\n   * Function that transforms api response from gotrue into a desirable / standardised format\r\n   */\r\n  xform?: (data: any) => any\r\n}\r\n\r\nexport async function _request(\r\n  fetcher: Fetch,\r\n  method: RequestMethodType,\r\n  url: string,\r\n  options?: GotrueRequestOptions\r\n) {\r\n  const headers = { ...options?.headers }\r\n  if (options?.jwt) {\r\n    headers['Authorization'] = `Bearer ${options.jwt}`\r\n  }\r\n  const qs = options?.query ?? {}\r\n  if (options?.redirectTo) {\r\n    qs['redirect_to'] = options.redirectTo\r\n  }\r\n  const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : ''\r\n  const data = await _handleRequest(\r\n    fetcher,\r\n    method,\r\n    url + queryString,\r\n    { headers, noResolveJson: options?.noResolveJson },\r\n    {},\r\n    options?.body\r\n  )\r\n  return options?.xform ? options?.xform(data) : { data: { ...data }, error: null }\r\n}\r\n\r\nasync function _handleRequest(\r\n  fetcher: Fetch,\r\n  method: RequestMethodType,\r\n  url: string,\r\n  options?: FetchOptions,\r\n  parameters?: FetchParameters,\r\n  body?: object\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    fetcher(url, _getRequestParams(method, options, parameters, body))\r\n      .then((result) => {\r\n        if (!result.ok) throw result\r\n        if (options?.noResolveJson) return result\r\n        return result.json()\r\n      })\r\n      .then((data) => resolve(data))\r\n      .catch((error) => handleError(error, reject))\r\n  })\r\n}\r\n\r\nexport function _sessionResponse(data: any): AuthResponse {\r\n  let session = null\r\n  if (hasSession(data)) {\r\n    session = { ...data }\r\n    session.expires_at = expiresAt(data.expires_in)\r\n  }\r\n  const user: User = data.user ?? (data as User)\r\n  return { data: { session, user }, error: null }\r\n}\r\n\r\nexport function _userResponse(data: any): UserResponse {\r\n  const user: User = data.user ?? (data as User)\r\n  return { data: { user }, error: null }\r\n}\r\n\r\nexport function _ssoResponse(data: any): SSOResponse {\r\n  return { data, error: null }\r\n}\r\n\r\nexport function _generateLinkResponse(data: any): GenerateLinkResponse {\r\n  const { action_link, email_otp, hashed_token, redirect_to, verification_type, ...rest } = data\r\n\r\n  const properties: GenerateLinkProperties = {\r\n    action_link,\r\n    email_otp,\r\n    hashed_token,\r\n    redirect_to,\r\n    verification_type,\r\n  }\r\n\r\n  const user: User = { ...rest }\r\n  return {\r\n    data: {\r\n      properties,\r\n      user,\r\n    },\r\n    error: null,\r\n  }\r\n}\r\n\r\nexport function _noResolveJsonResponse(data: any): Response {\r\n  return data\r\n}\r\n\r\n/**\r\n * hasSession checks if the response object contains a valid session\r\n * @param data A response object\r\n * @returns true if a session is in the response\r\n */\r\nfunction hasSession(data: any): boolean {\r\n  return data.access_token && data.refresh_token && data.expires_in\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}