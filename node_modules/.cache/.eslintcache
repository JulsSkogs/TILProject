[{"C:\\Users\\recar\\Documents\\GitHub\\TILProject\\src\\index.js":"1","C:\\Users\\recar\\Documents\\GitHub\\TILProject\\src\\App.js":"2","C:\\Users\\recar\\Documents\\GitHub\\TILProject\\src\\supabase.js":"3"},{"size":232,"mtime":1671866292964,"results":"4","hashOfConfig":"5"},{"size":7907,"mtime":1672196594431,"results":"6","hashOfConfig":"5"},{"size":444,"mtime":1672195755247,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15zj6l8",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\recar\\Documents\\GitHub\\TILProject\\src\\index.js",[],[],"C:\\Users\\recar\\Documents\\GitHub\\TILProject\\src\\App.js",["18","19","20","21"],[],"import { useEffect, useState } from \"react\";\nimport supabase from \"./supabase\";\n\nimport \"./style.css\";\n\nconst initialFacts = [\n  {\n    id: 1,\n    text: \"React is being developed by Meta (formerly facebook)\",\n    source: \"https://opensource.fb.com/\",\n    category: \"technology\",\n    votesInteresting: 24,\n    votesMindblowing: 9,\n    votesFalse: 4,\n    createdIn: 2021,\n  },\n  {\n    id: 2,\n    text: \"Millennial dads spend 3 times as much time with their kids than their fathers spent with them. In 1982, 43% of fathers had never changed a diaper. Today, that number is down to 3%\",\n    source:\n      \"https://www.mother.ly/parenting/millennial-dads-spend-more-time-with-their-kids\",\n    category: \"society\",\n    votesInteresting: 11,\n    votesMindblowing: 2,\n    votesFalse: 0,\n    createdIn: 2019,\n  },\n  {\n    id: 3,\n    text: \"Lisbon is the capital of Portugal\",\n    source: \"https://en.wikipedia.org/wiki/Lisbon\",\n    category: \"society\",\n    votesInteresting: 8,\n    votesMindblowing: 3,\n    votesFalse: 1,\n    createdIn: 2015,\n  },\n];\n\n/////////////////////////////////////////\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <span style={{ fontSize: \"40px\" }}>{count}</span>\n      <button className=\"btn btn-large\" onClick={() => setCount((c) => c + 1)}>\n        +!\n      </button>\n    </div>\n  );\n}\n\nfunction App() {\n  const [showForm, setShowForm] = useState(false);\n  const [facts, setFacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentCategory, setCurrentCategory] = useState(\"all\");\n\n  useEffect(\n    function () {\n      async function getFacts() {\n        setIsLoading(true);\n\n        let query = supabase.from(\"facts\").select(\"*\");\n\n        if (currentCategory !== \"all\")\n          query = query.eq(\"category\", currentCategory);\n\n        const { data: facts, error } = await query\n          .order(\"votesInteresting\", { ascending: false })\n          .limit(1000);\n\n        if (!error) setFacts(facts);\n        else alert(\"There was an error loading the data.\");\n        setIsLoading(false);\n      }\n      getFacts();\n    },\n    [currentCategory]\n  );\n\n  return (\n    <>\n      <Header showForm={showForm} setShowForm={setShowForm} />\n\n      {showForm ? (\n        <NewFactForm setFacts={setFacts} setShowForm={setShowForm} />\n      ) : null}\n\n      <main className=\"main\">\n        <CategoryFilter setCurrentCategory={setCurrentCategory} />\n\n        {isLoading ? <LoadScreen /> : <FactList facts={facts} />}\n      </main>\n    </>\n  );\n}\n\nfunction LoadScreen() {\n  return <p className=\"msg\">Loading. . .</p>;\n}\n\nfunction Header({ showForm, setShowForm }) {\n  const appTitle = \"Today I Learned\";\n\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">\n        <img src=\"logo.png\" height=\"68\" width=\"68\" alt=\"Today I Learned Logo\" />\n        <h1>{appTitle}</h1>\n      </div>\n\n      <button\n        className=\"btn btn-large share-button\"\n        onClick={() => setShowForm((show) => !show)}\n      >\n        {showForm ? \"Close\" : \"Share a fact!\"}\n      </button>\n    </header>\n  );\n}\n\nconst CATEGORIES = [\n  { name: \"technology\", color: \"#3b82f6\" },\n  { name: \"science\", color: \"#16a34a\" },\n  { name: \"finance\", color: \"#ef4444\" },\n  { name: \"society\", color: \"#eab308\" },\n  { name: \"entertainment\", color: \"#db2777\" },\n  { name: \"health\", color: \"#14b8a6\" },\n  { name: \"history\", color: \"#f97316\" },\n  { name: \"news\", color: \"#8b5cf6\" },\n];\n\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction NewFactForm({ setFacts, setShowForm }) {\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"http://example.com\");\n  const [category, setCategory] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const textLength = text.length;\n\n  async function handleSubmit(e) {\n    // 1. Prevent browser reload\n    e.preventDefault();\n    console.log(text, source, category);\n    // 2. Check if the data is valid. If so, create a new fact\n    if (text && isValidHttpUrl(source) && category && text.length <= 200) {\n      // 3. Create a new fact object (Not needed once we get to Step 7)\n      // const newFact = {\n      //   id: Math.round(Math.random() * 100),\n      //   text,\n      //   source,\n      //   category,\n      //   votesInteresting: 0,\n      //   votesMindblowing: 0,\n      //   votesFalse: 0,\n      //   createdIn: new Date().getFullYear(),\n      // };\n      // 7. Upload NEW facts to Supabase\n      setIsUploading(true);\n      const { data: newFact, error } = await supabase\n        .from(\"facts\")\n        .insert([{ text, source, category }])\n        .select();\n      setIsUploading(false);\n      // console.log(newFact);\n      // 4. Add the new fact to the UI/add the fact to state\n      setFacts((facts) => [newFact[0], ...facts]);\n      // 5. Reset input fields\n      setText(\"\");\n      setSource(\"\");\n      setCategory(\"\");\n      // 6. Close the form\n      setShowForm(false);\n    }\n  }\n\n  return (\n    <form className=\"fact-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Share a fact with the world\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <span>{200 - text.length}</span>\n      <input\n        value={source}\n        type=\"text\"\n        placeholder=\"Trustworthy source\"\n        onChange={(e) => setSource(e.target.value)}\n        disabled={isUploading}\n      />\n      <select\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        disabled={isUploading}\n      >\n        <option value=\"\" placeholder=\"Share a fact with the world\">\n          Choose a category\n        </option>\n        {CATEGORIES.map((cat) => (\n          <option key={cat.name} value={cat.name}>\n            {cat.name.toUpperCase()}\n          </option>\n        ))}\n      </select>\n      <button className=\"btn btn-large\" disabled={isUploading}>\n        Post\n      </button>\n    </form>\n  );\n}\n\nfunction CategoryFilter({ setCurrentCategory }) {\n  return (\n    <aside>\n      <ul>\n        <li className=\"category\">\n          <button\n            class=\"btn btn-all-categories\"\n            onClick={() => setCurrentCategory(\"all\")}\n          >\n            All\n          </button>\n        </li>\n\n        {CATEGORIES.map((cat) => (\n          <li key={cat.name} className=\"category\">\n            <button\n              className=\"btn btn-category\"\n              style={{ backgroundColor: cat.color }}\n              onClick={() => setCurrentCategory(cat.name)}\n            >\n              {cat.name}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </aside>\n  );\n}\n\nfunction FactList({ facts }) {\n  if (facts.length === 0) {\n    return (\n      <p className=\"msg\">\n        There are no facts for this category yet. Try adding one!\n      </p>\n    );\n  }\n\n  return (\n    <section>\n      <ul className=\"facts-list\">\n        {facts.map((fact) => (\n          <Fact key={fact.id} fact={fact} />\n        ))}\n      </ul>\n      <p>\n        There are {facts.length} facts in the database. Add your own and help it\n        grow!\n      </p>\n    </section>\n  );\n}\n\nfunction Fact({ fact }) {\n  return (\n    <li className=\"fact\">\n      <p>\n        {fact.text}\n        <a className=\"source\" href={fact.source} /*target=\"_blank\"*/>\n          (Source)\n        </a>\n      </p>\n      <span\n        className=\"tag\"\n        style={{\n          backgroundColor: CATEGORIES.find((cat) => cat.name === fact.category)\n            .color,\n        }}\n      >\n        {fact.category}\n      </span>\n      <div className=\"vote-buttons\">\n        <button>üëç {fact.votesInteresting}</button>\n        <button>ü§Ø {fact.votesMindblowing}</button>\n        <button>‚õîÔ∏è {fact.votesFalse}</button>\n      </div>\n    </li>\n  );\n}\n\nexport default App;\n","C:\\Users\\recar\\Documents\\GitHub\\TILProject\\src\\supabase.js",[],[],{"ruleId":"22","severity":1,"message":"23","line":6,"column":7,"nodeType":"24","messageId":"25","endLine":6,"endColumn":19},{"ruleId":"22","severity":1,"message":"26","line":41,"column":10,"nodeType":"24","messageId":"25","endLine":41,"endColumn":17},{"ruleId":"22","severity":1,"message":"27","line":149,"column":9,"nodeType":"24","messageId":"25","endLine":149,"endColumn":19},{"ruleId":"22","severity":1,"message":"28","line":170,"column":30,"nodeType":"24","messageId":"25","endLine":170,"endColumn":35},"no-unused-vars","'initialFacts' is assigned a value but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'textLength' is assigned a value but never used.","'error' is assigned a value but never used."]